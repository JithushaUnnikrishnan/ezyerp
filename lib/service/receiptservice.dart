// import 'dart:convert';
// import 'package:bill/models/area_mode.dart';
// import 'package:http/http.dart' as http;

// Future<Autogenerated?> Receipt(dynamic response) async {
//     Map<String, dynamic> data = {
//       "officecode": 'RD01',
//       "officeid": "1",
//       "empid": "1",
//       "financialyearid": '1',
//       'sdate': '2023-04-01',
//       'edate': '2024-05-30'
//     };

//     const headercommon = {
//       'Content-Type': 'application/x-www-form-urlencoded',
//       'Accept': 'application/json',
//     };

//     try {
//       var responses = await http.post(
//         Uri.parse("http://app.ezyerp.live/collections.php"),
//         headers: headercommon,
//         body: Uri(queryParameters: data).query,
//       );

//       print('Response body: ${responses.body}');

//        if (response.statusCode == 200) {
//         final jsonResponse = json.decode(response.body);
//         if (jsonResponse['flag'] == true && jsonResponse.containsKey('collections')) {
//           return Autogenerated.fromJson(jsonResponse);
//         } else {
//           print('No Receipts found or flag is false: ${jsonResponse['msg']}');
//         }
//       } else {
//         print('Failed to load receipts with status code ${response.statusCode}');
//       }
//     } catch (e) {
//       print('An error occurred: $e');
//     }
//     return null;
//   }

// another way

// receiptservice.dart

import 'dart:convert';
import 'package:bill/models/receiptModel.dart';
import 'package:http/http.dart' as http;

class ReceiptService {
  static const String _url = "http://app.ezyerp.live/collections.php"; 
  static const Map<String, String> _headers = {
    'Content-Type': 'application/x-www-form-urlencoded',
    'Accept': 'application/json',
  };

  Future<List<Collections>> fetchReceipts() async {
    final Map<String, dynamic> data = {
     "officecode": 'RD01',
      "officeid": "1",
      "empid": "1",
      "financialyearid": '1',
      'sdate': '2023-04-01',
      'edate': '2024-05-30'
      // Add other parameters as needed
    };

    try {
      final response = await http.post(
        Uri.parse(_url),
        headers: _headers,
        body: Uri(queryParameters: data).query,
      );

      if (response.statusCode == 200) {
        final jsonResponse = json.decode(response.body);

        // Deserialize JSON response
        final result = Autogenerated.fromJson(jsonResponse);
        print("result is$result");

        // Check if the flag is true and collections data exists
        if (result.flag == true && result.collections != null) {
          return result.collections!;
        }
      }

      // Return empty list if no data or an error in response
      return [];
    } catch (e) {
      print("Error fetching receipt data: $e");
      return [];
    }
  }
}
